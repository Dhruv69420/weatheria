{"version":3,"sources":["MyComponents/Forecast.js","App.js","serviceWorker.js","index.js"],"names":["Forecast","props","useState","max","setmax","min","setmin","max1","setmax1","min1","setmin1","max2","setmax2","min2","setmin2","max3","setmax3","min3","setmin3","sky","setsky","sky1","setsky1","sky2","setsky2","sky3","setsky3","minmax","list","date","check","Max","Min","map","item","dt_txt","substr","console","log","main","temp_max","temp_min","time","weather","className","onMouseEnter","Date","getDate","toString","Math","round","api","key","base","App","query","setQuery","setWeather","butt","setbutt","settime","flag","setflag","type","placeholder","onChange","e","target","value","onKeyPress","evt","fetch","then","res","json","result","cc","diff","realtime","Number","getHours","city","coord","lon","abs","indexOf","tim","name","country","d","day","getDay","month","getMonth","year","getFullYear","dateBuilder","temp","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98a76479.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './forecast.css';\r\n\r\nexport default function Forecast(props) {\r\n    const [max, setmax] = useState(0);\r\n    const [min, setmin] = useState(0);\r\n    const [max1, setmax1] = useState(0);\r\n    const [min1, setmin1] = useState(0);\r\n    const [max2, setmax2] = useState(0);\r\n    const [min2, setmin2] = useState(0);\r\n    const [max3, setmax3] = useState(0);\r\n    const [min3, setmin3] = useState(0);\r\n    \r\n    const [sky, setsky] = useState(\" \");\r\n    const [sky1, setsky1] = useState(\" \");\r\n    const [sky2, setsky2] = useState(\" \");\r\n    const [sky3, setsky3] = useState(\" \");\r\n    \r\n    const minmax = (list,date,check) => {\r\n        \r\n        let Max=0;\r\n        let Min=100;\r\n        list.map((item)=>{\r\n            \r\n            if(date==item.dt_txt.substr(9,1)){\r\n                console.log(date+\"  \"+item.dt_txt.substr(9,2));\r\n                if(item.main.temp_max>Max){\r\n                    Max=item.main.temp_max;\r\n                }\r\n            }\r\n            if(date==item.dt_txt.substr(9,1)){\r\n                if(item.main.temp_min<Min){\r\n                    Min=item.main.temp_min;\r\n                }\r\n            }\r\n          }\r\n        );\r\n       \r\n        if(check===0){\r\n            setmax(Max)\r\n            setmin(Min)\r\n            setsky(list[props.time+8].weather[0].main)\r\n        }\r\n        else if(check===1){\r\n            setmax1(Max)\r\n            setmin1(Min)\r\n            setsky1(list[props.time+16].weather[0].main)\r\n        }\r\n        else if(check===2){\r\n            setmax2(Max)\r\n            setmin2(Min)\r\n            setsky2(list[props.time+24].weather[0].main)\r\n        }else if(check===3){\r\n            setmax3(Max)\r\n            setmin3(Min)\r\n            setsky3(list[props.time+32].weather[0].main)\r\n        }\r\n        \r\n     } \r\n  \r\n    \r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row fore\">\r\n                <div className=\"col-sm-3 my-1\">\r\n                    <div className=\"card\">\r\n                        <div onMouseEnter={()=>minmax(props.list,((new Date()).getDate()+1).toString(),0)} className=\"card-body\">\r\n                            <h5 className=\"card-title\">{sky}</h5>\r\n                            <p className=\"card-text\">Min : {Math.round(min)}°c</p>\r\n                            <p className=\"card-text\">Max : {Math.round(max)}°c</p>   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3 my-1\">\r\n                    <div className=\"card\">\r\n                        <div onMouseEnter={()=>minmax(props.list,((new Date()).getDate()+2).toString(),1)} className=\"card-body\">\r\n                            <h5 className=\"card-title\">{sky1}</h5>\r\n                            <p className=\"card-text\">Min : {Math.round(min1)}°c</p>\r\n                            <p className=\"card-text\">Max : {Math.round(max1)}°c</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3 my-1\">\r\n                    <div className=\"card\">\r\n                        <div onMouseEnter={()=>minmax(props.list,((new Date()).getDate()+3).toString(),2)} className=\"card-body\">\r\n                            <h5 className=\"card-title\">{sky2}</h5>\r\n                            <p className=\"card-text\">Min : {Math.round(min2)}°c</p>\r\n                            <p className=\"card-text\">Max : {Math.round(max2)}°c</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3 my-1\">\r\n                    <div className=\"card\">\r\n                        <div onMouseEnter={()=>minmax(props.list,((new Date()).getDate()+4).toString(),3)} className=\"card-body\">\r\n                            <h5 className=\"card-title\">{sky3}</h5>\r\n                            <p className=\"card-text\">Min: {Math.round(min3)}°c</p>\r\n                            <p className=\"card-text\">Max: {Math.round(max3)}°c</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\nimport Forecast from \"./MyComponents/Forecast\";\nconst api = {\n  key: \"f016da3b1ea75ef2166e622b552c7654\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [min, setmin] = useState(0);\n  const [max, setmax] = useState(0);\n  const [butt, setbutt] = useState(\"hidden\");\n  const [time, settime] = useState(0);\n  const [flag, setflag] = useState(false);\n\n  // var real_time=Number(weather.list[time].dt_txt.substr(11,2));\n  const minmax = (list, date) => {\n    let Max = 0;\n    let Min = 100;\n    list.map((item) => (\n      <div>\n        {\n          (date === Number(item.dt_txt.substr(8, 2))\n            ? item.main.temp_max > Max\n              ? (Max = item.main.temp_max)\n              : \"\"\n            : \"\",\n          date === Number(item.dt_txt.substr(8, 2))\n            ? item.main.temp_min < Min\n              ? (Min = item.main.temp_min)\n              : \"\"\n            : \"\")\n        }\n      </div>\n    ));\n\n    setmax(Max);\n    setmin(Min);\n  };\n  const tim = (date, list) => {\n    let cc = -1;\n    let diff = 13;\n    let ind = 81.8463;\n    let realtime =\n      Number(date.getHours()) +\n      Math.round((Number(weather.city.coord.lon) - ind) / 15);\n    let indate = date.getDate();\n    if (realtime > 24) {\n      indate += 1;\n      realtime -= 24;\n    }\n    list.map((item) => (\n      <div>\n        {Number(date.getDate()) === Number(item.dt_txt.substr(8, 2))\n          ? Math.abs(date.getHours() - Number(item.dt_txt.substr(11, 2))) < diff\n            ? ((diff = Math.abs(\n                date.getHours() - Number(item.dt_txt.substr(11, 2))\n              )),\n              (cc = list.indexOf(item)))\n            : \"\"\n          : \"\"}\n      </div>\n    ));\n\n    setflag(false);\n    settime(cc);\n  };\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}forecast?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          setmin(0);\n          setmax(0);\n          setbutt(\"hidden\");\n          console.log(result);\n          setflag(true);\n        });\n    }\n  };\n\n  const dateBuilder = (d) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    <div>\n      <div\n        className={\n          typeof weather.list != \"undefined\"\n            ? weather.list[time].weather[0].main === \"sunny\"\n              ? \"app sunny\"\n              : (weather.list[time].weather[0].main === \"Rain\"\n                  ? \"app rainy\"\n                  : weather.list[time].weather[0].main === \"Clouds\"\n                  ? \"app cloudy\"\n                  : weather.list[time].weather[0].main === \"Clear\"\n                  ? \"app\"\n                  : \"app cloudy\")\n            : \"app cloudy\"\n        }\n      >\n        <main>\n          <div onMouseEnter={() => console.log(time)} className=\"search-box\">\n            <input\n              type=\"text\"\n              className=\"search-bar\"\n              placeholder=\"Enter Your City...\"\n              onChange={(e) => setQuery(e.target.value)}\n              onKeyPress={search}\n              value={query}\n            />\n          </div>\n\n          {typeof weather.list != \"undefined\" && typeof time != \"undefined\" ? (\n            <div>\n              {flag && tim(new Date(), weather.list)}\n\n              <div className=\"location-box\">\n                <div className=\"location\">\n                  {weather.city.name} {weather.city.country}\n                </div>\n\n                <div className=\"date\">{dateBuilder(new Date())}</div>\n              </div>\n              <div\n                onMouseEnter={() => minmax(weather.list, new Date().getDate())}\n                className=\"weather-box\"\n              >\n                <div className=\"temp\">\n                  {Math.round(weather.list[time].main.temp)}°c\n                  <div className=\"temprange\">\n                    Max: {Math.round(max)} <span>&nbsp;</span> Min:{\" \"}\n                    {Math.round(min)}\n                  </div>\n                </div>\n                <div className=\"weather\">\n                  {weather.list[time].weather[0].main}\n                </div>\n              </div>\n\n              <div className=\"wrapper\">\n                <button\n                  onClick={() => {\n                    setbutt(\"show\");\n                  }}\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                >\n                  4 Day Forecast\n                </button>\n              </div>\n              <br />\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div>\n            {butt === \"show\" && <Forecast list={weather.list} time={time} />}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}